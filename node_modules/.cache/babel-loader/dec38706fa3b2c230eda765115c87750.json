{"ast":null,"code":"var _jsxFileName = \"/home/abhijeet/Desktop/GITHUB/movietrak/src/components/SearchBar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react'; //Image \n\nimport searchIcon from \"../../images/search-icon.svg\"; //Styles\n\nimport { Wrapper, Content } from './SearchBar.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  setSearchterm\n}) => {\n  _s();\n\n  const [state, setState] = useState('');\n  const initial = useRef(true);\n  useEffect(() => {\n    //To ignore initial rerender when using useState\n    if (initial.current) {\n      initial.current = false;\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      setSearchterm(state);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [setSearchterm, state]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: searchIcon,\n        alt: \"search-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search Movie\",\n        onChange: event => setState(event.currentTarget.value),\n        value: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"4a0yaNaJsI13bM4rPp+JAhdzH6s=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/abhijeet/Desktop/GITHUB/movietrak/src/components/SearchBar/index.js"],"names":["React","useState","useEffect","useRef","Wrapper","Content","SearchBar","setSearchterm","state","setState","initial","current","timer","setTimeout","clearTimeout","searchIcon","event","currentTarget","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,EAAkCC,MAAlC,QAA+C,OAA/C,C,CAEA;;uDAGA;;AACA,SAASC,OAAT,EAAiBC,OAAjB,QAAgC,oBAAhC;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAqB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAMS,OAAO,GAAGP,MAAM,CAAC,IAAD,CAAtB;AAGAD,EAAAA,SAAS,CAAC,MAAI;AAEV;AACA,QAAGQ,OAAO,CAACC,OAAX,EAAmB;AACfD,MAAAA,OAAO,CAACC,OAAR,GAAkB,KAAlB;AACA;AACH;;AAED,UAAMC,KAAK,GAAGC,UAAU,CAAC,MAAK;AAC1BN,MAAAA,aAAa,CAACC,KAAD,CAAb;AACH,KAFuB,EAEtB,GAFsB,CAAxB;AAIA,WAAO,MAAMM,YAAY,CAACF,KAAD,CAAzB;AACH,GAbQ,EAaP,CAACL,aAAD,EAAeC,KAAf,CAbO,CAAT;AAcA,sBACI,QAAC,OAAD;AAAA,2BACI,QAAC,OAAD;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEO,UAAV;AAAsB,QAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,WAAW,EAAC,cAFZ;AAGA,QAAA,QAAQ,EAAGC,KAAK,IAAIP,QAAQ,CAACO,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAH5B;AAIA,QAAA,KAAK,EAAEV;AAJP;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAhCD;;GAAMF,S;;KAAAA,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React, {useState,useEffect,useRef} from 'react';\n\n//Image \nimport searchIcon from '../../images/search-icon.svg';\n\n//Styles\nimport { Wrapper,Content } from './SearchBar.styles';\n\nconst SearchBar = ({setSearchterm}) => {\n    const [state,setState] = useState('');\n    const initial = useRef(true);\n\n\n    useEffect(()=>{\n\n        //To ignore initial rerender when using useState\n        if(initial.current){\n            initial.current = false;\n            return; \n        }\n\n        const timer = setTimeout(()=> {\n            setSearchterm(state);\n        },500)\n\n        return () => clearTimeout(timer)\n    },[setSearchterm,state]);\n    return(\n        <Wrapper>\n            <Content>\n                <img src={searchIcon} alt='search-icon' />\n                <input \n                type='text' \n                placeholder='Search Movie'\n                onChange ={event => setState(event.currentTarget.value)}\n                value={state}\n                />\n            </Content>\n        </Wrapper>\n    );\n};\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}