{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react'; //API\n\nimport API from '../API';\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0\n};\nexport const useHomeFetch = () => {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async (page, searchTerm = \"\") => {\n    try {\n      setError(false);\n      setLoading(true); // console.log(API_KEY);\n\n      const movies = await API.fetchMovies(searchTerm, page); // console.log(movies);\n\n      setState(prev => ({ ...movies,\n        results: page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n      }));\n    } catch (error) {\n      setError(true);\n    }\n\n    setLoading(false);\n  }; //INITIAL RENDER\n\n\n  useEffect(() => {\n    fetchMovies(1);\n  }, []);\n  return {\n    state,\n    loading,\n    error\n  };\n};\n\n_s(useHomeFetch, \"fzT+Fz3JY42K4ExdubuQplS9KXk=\");","map":{"version":3,"sources":["/home/abhijeet/Desktop/GITHUB/movietrak/src/hooks/useHomeFetch.js"],"names":["useState","useEffect","useRef","API","initialState","page","results","total_pages","total_results","useHomeFetch","state","setState","loading","setLoading","error","setError","fetchMovies","searchTerm","movies","prev"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,SAAjB,EAA2BC,MAA3B,QAAuC,OAAvC,C,CACA;;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,CADW;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,WAAW,EAAE,CAHI;AAIjBC,EAAAA,aAAa,EAAE;AAJE,CAArB;AAOA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBX,QAAQ,CAACI,YAAD,CAA/B;AACA,QAAM,CAACQ,OAAD,EAASC,UAAT,IAAuBb,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACc,KAAD,EAAOC,QAAP,IAAmBf,QAAQ,CAAC,KAAD,CAAjC;;AAEA,QAAMgB,WAAW,GAAE,OAAOX,IAAP,EAAYY,UAAU,GAAG,EAAzB,KAAgC;AAC/C,QAAI;AACAF,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV,CAFA,CAGA;;AACA,YAAMK,MAAM,GAAG,MAAMf,GAAG,CAACa,WAAJ,CAAgBC,UAAhB,EAA4BZ,IAA5B,CAArB,CAJA,CAKA;;AAEAM,MAAAA,QAAQ,CAACQ,IAAI,KAAK,EACd,GAAGD,MADW;AAEdZ,QAAAA,OAAO,EACHD,IAAI,GAAG,CAAP,GAAW,CAAC,GAAGc,IAAI,CAACb,OAAT,EAAkB,GAAGY,MAAM,CAACZ,OAA5B,CAAX,GAAkD,CAAC,GAAGY,MAAM,CAACZ,OAAX;AAHxC,OAAL,CAAL,CAAR;AAKH,KAZD,CAaA,OAAMQ,KAAN,EAAa;AACTC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACDF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAlBD,CAL8B,CAyB9B;;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACbe,IAAAA,WAAW,CAAC,CAAD,CAAX;AACF,GAFQ,EAEP,EAFO,CAAT;AAIA,SAAO;AAACN,IAAAA,KAAD;AAAOE,IAAAA,OAAP;AAAeE,IAAAA;AAAf,GAAP;AACH,CA/BM;;GAAML,Y","sourcesContent":["import {useState,useEffect,useRef}from 'react';\n//API\nimport API from '../API'\n\nconst initialState = {\n    page: 0,\n    results: [],\n    total_pages: 0,\n    total_results: 0\n};\n\nexport const useHomeFetch = () => {\n    const [state,setState]=useState(initialState);\n    const [loading,setLoading] = useState(false);\n    const [error,setError] = useState(false);\n\n    const fetchMovies =async (page,searchTerm = \"\") => {\n        try {\n            setError(false);\n            setLoading(true);\n            // console.log(API_KEY);\n            const movies = await API.fetchMovies(searchTerm, page);\n            // console.log(movies);\n\n            setState(prev => ({ \n                ...movies,\n                results:\n                    page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n            }));\n        }\n        catch(error) {   \n            setError(true);\n        }\n        setLoading(false);\n    };\n\n    //INITIAL RENDER\n    useEffect(() => {\n       fetchMovies(1); \n    },[]);\n\n    return {state,loading,error};\n};"]},"metadata":{},"sourceType":"module"}